#include <stdarg.h>
#include <stdio.h>

/**
 * print_binary - Recursive function to print binary representation of a number
 * @number: The number to be converted to binary
 */
void print_binary(unsigned int number)
{
    if (number > 1)
    {
        print_binary(number / 2);
    }
    putchar('0' + number % 2);
}

/**
 * my_printf - Custom printf function with binary conversion specifier
 * @format: The format string
 * @...: Variable arguments
 */
void my_printf(const char *format, ...)
{
    va_list args;
    va_start(args, format);

    while (*format != '\0')
    {
        if (*format == '%' && *(format + 1) == 'b')
        {
            format += 2;
            unsigned int number = va_arg(args, unsigned int);
            print_binary(number);
        }
        else
        {
            putchar(*format);
            format++;
        }
    }

    va_end(args);
}

/**
 * main - Entry point
 * Return: Always 0
 */
int main(void)
{
   my_printf("%b\n", 98);
    return 0;
}
